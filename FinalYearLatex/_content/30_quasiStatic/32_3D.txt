The three dimensional model offers new challenges and new options in terms of quasistatic
locomotion. Modifications were made to the IKM and step trajectory generation in order to 
exploit as much of the work completed in section \ref{sec:2D_QS} as possible.\\

Rather than walking in a straight line, the robot shall now `follow' a trajectory. The method 
used to convert an arbitrary trajectory into a series of foot steps is found in section \ref{sec:NovelTraj}.

\subsubsection*{Three Dimensional Inverse Kinematic Model}
In three dimensions there are aspects of the robot's posture that are desirable to control. 
The priority is to keep the robot's torso vertical. Ensuring its waist perpendicular to the trajectory 
it is traveling along is desirable, but is not necessarily possible from the initial posture
of the robot.\\

A closer inspection of Figure \ref{fig:3D_1} is depicted in Figure \ref{fig:3D_pair}. On the
left, in green, $\vec{r}^{B}_{5}(\mathbf{q})$ is the position vector associated with the transform 
$\mathbf{T^B_5}(\mathbf{q})$. Additionally two unit vectors, $\mathbf{e_x}$ and $\mathbf{e_z}$, were projected 
from the base coordinate system.

\begin{figure}[!h]
    \begin{center}
        \includegraphics[width=.9\linewidth]{_content/30_quasiStatic/3D/fig_vPair.png}
        \caption{$ \vec{r}^{B}_{5} (\mathbf{q}) $ and two positions systems constructed from it}
        \label{fig:3D_pair}
    \end{center}
\end{figure}

On the right, in purple, we have two additional vectors, $\vec{r}^{B}_{5a}$ and $\vec{r}^{B}_{5b}$ that 
were constructed from $\mathbf{T^B_5}$ by multiplying $\mathbf{T^B_5}$ by the homogenous transforms
found in equations \ref{eq:rbl5a} and \ref{eq:rbl5b}. Thus both $\vec{r}^{B}_{5a}$ and $\vec{r}^{B}_{5b}$
share the orientation of $\mathbf{T^B_5}$.

\begin{align}
    \mathbf{T^B_5}_a &= \mathbf{T^B_5} \cdot \begin{bmatrix}
        \mathbf{I}_{3 \times 3}     &   [0, 0, 1]^\top   \\
        \mathbf{0}_{1 \times 3}     &   1
    \end{bmatrix}   \label{eq:rbl5a} \\
    \mathbf{T^B_5}_b &= \mathbf{T^B_5} \cdot \begin{bmatrix}
        \mathbf{I}_{3 \times 3}     &   [1, 0, 0]^\top   \\
        \mathbf{0}_{1 \times 3}     &   1
    \end{bmatrix} \label{eq:rbl5b}
\end{align}

\begin{figure}[!h]
    \begin{center}
        \includegraphics[width=.5\linewidth]{_content/30_quasiStatic/3D/fig_vResult.png}
        \caption{$\vec{AB}_a(\mathbf{q})$ and $\vec{AB}_b(\mathbf{q})$}
        \label{fig:3D_result}
    \end{center}
\end{figure}

Figure \ref{fig:3D_result} includes all the vectors from the previous figure, and determines
the vectors $\vec{AB}_a$ and $\vec{AB}_b$ by subtracting the corresponding position.

Initially $\vec{AB}_a$ and $\vec{AB}_b$ are unit vectors constructed from $\vec{r}^{B}_{5}$.
As $\vec{AB}_a$ and $\vec{AB}_b$ are constructed with respect to the 
base coordinate system, they will cease to be unit vectors upon any change in orientation of $\vec{r}^{B}_{5}$. 
Upon taking the dot product of $\vec{AB}_a$ and either unit vector, $\mathbf{e_x}$ or $\mathbf{e_z}$, if 
the result is zero, then then $\vec{AB}_a$ is perpendicular to the corresponding unit vector.
If $\vec{AB}_a$ is perpendicular to both, the torso of the robot is perpendicular to both 
unit vectors. As $\vec{AB}_a$ is a function of $\mathbf{q}$, the result of the dot product 
with the unit vectors was used as a pair of nonlinear equality constraints for the three 
dimensional IKM. Thus the IKM is now subjected to the inequality constraint found in equation 
\ref{eq:2D_ineq} in addition to the equality constraints found in equations \ref{eq:3D_eqc1} and \ref{eq:3D_eqc2}.

\begin{align}
    \mathbf{e_x}^{\top}\vec{AB}_a &= 0  \label{eq:3D_eqc1} \\
    \mathbf{e_z}^{\top}\vec{AB}_a &= 0  \label{eq:3D_eqc2}
\end{align}

Figure \ref{fig:3D_cTraj} depicts the use of $\vec{AB}_b(\mathbf{q})$. As an arbitrary trajectory, 
$\mathbf{Q}(t)$, is a function of time, a vector, $\vec{TJ}^{B}_{t}$, is formed from the difference 
between the current column vector of $\mathbf{Q}(t)$ and the previous one $\mathbf{Q}(t-1)$.

\begin{figure}[!h]
    \begin{center}
        \includegraphics[width=.5\linewidth]{_content/30_quasiStatic/3D/fig_vTraj.png}
        \caption{Trajectory $\mathbf{Q}(t)$ and $\vec{AB}_b(\mathbf{q})$}
        \label{fig:3D_cTraj}
    \end{center}
\end{figure}

As the robot's waist will not necessarily start perpendicular to the trajectory, the weighted dot 
product of $\vec{TJ}^{B}_{t}$ and $\vec{AB}_b(\mathbf{q})$ was added to the two dimensional IKM.
If this was implemented as a nonlinear constraint the optimal array of joints values, $\mathbf{q^*}$,
immediately following $\mathbf{q_0}$ would result in an instantaneous torque about the $Y$ axis.
Thus to orientate the waist of the robot such that it is perpendicular to $\mathbf{Q}(t)$ the IKM
becomes equation \eqref{eq:3D_ikm}. The higher weights of $\mathbf{K_{tj}}$ result in an initial
angular velocity of the torso about the $Y$ axis, however, this angular velocity immediately 
decelerates to the angular velocity of the trajectory about the $Y$ axis.

\begin{equation}\label{eq:3D_ikm}
    \begin{split}
        \mathbf{q^{*}} = \underset{\mathbf{q}}{\mathrm{arg\:min}}\:\:
        &\mathbf{K_{e}}      \lVert  {   k(\mathbf{q}) - \mathbf{x_{e}^*}                         }   \rVert \: + \\
        &\mathbf{K_{CoM}}    \lVert  {   \mathbf{r^{B}_{SP}} - \mathbf{r^{B}_{CoM}}(\mathbf{q})   }   \rVert \: + \\
        &\mathbf{K_{q}}      \lVert  {   \mathbf{q_{0}} - \mathbf{q}                              }   \rVert \: + \\
        &\mathbf{K_{tj}}     \lVert\:{   (\vec{TJ}^{B}_{(t)})^{\top} \cdot \vec{AB}_b(\mathbf{q})   } \:\rVert
    \end{split}
\end{equation}

\subsubsection*{Footstep Trajectory Generation}
In three dimensions the method for generating a trajectory for the end effector, the stepping foot,
is largely the same as the two dimensional method, found in equation \eqref{eq:2D_pos}. 
In order to traverse an arbitrary trajectory, $\mathbf{Q}(t)$, the rotation of the end effector
about the base $Y$ axis must be updated to be parallel with $\mathbf{Q}(t_{f})$, where
$t_f$ is the time instant at which the end effector returns to the ground. Figure \ref{fig:3D_angTraj}
presents the arbitrary trajectory in green, with two $\mathbf{r}(x,z)$ positions.

\begin{figure}[!h]
    \begin{center}
        \includegraphics[width=.8\linewidth]{_content/30_quasiStatic/3D/fig_trajAngReal2.png}
        \caption{Trajectory $\mathbf{Q}(t)$, final step time $t_f$, and its gradient $\nabla$}
        \label{fig:3D_angTraj}
    \end{center}
\end{figure}

To determine the the angle between the $Z$ axis of the base, $Z_{b}$, and the line segment
$\mathbf{r}_{(t_f-1)}\, \to \,\mathbf{r}_{(t_f)}$ the $atan2(\nabla,1)$ function is used.
However, as the `toe' of the robot's foot is defined along $X$ axis of the end effector, $X_{e}$,
the priority was ensuring that $X_{e}$ was parallel to the line segment 
$\mathbf{r}_{(t_f-1)}\, \to \,\mathbf{r}_{(t_f)}$. Thus, the desired yaw angle of the end effector 
about $Y_b$ is $atan2(-(\nabla)^{-1},1)$. This lead to equation \eqref{eq:aTan}, 
which defines the yaw angle of the end effector at $t_{f}$.

\begin{equation}\label{eq:aTan}
    \theta_{t_f} = atan2(-\frac{(z_{t_f} - z_{t_{t_{f} - 1} })}{(x_{t_f} - x_{t_{t_{f} - 1} })},1)
\end{equation}

Thus equation \eqref{eq:2D_qt} was extended to form equation \eqref{eq:3D_qt} which defines the 
path and orientation of the end effector from the inital step time, to the final step time.

\begin{equation}\label{eq:3D_qt}
    \mathbf{x_{e}}(0 \: \to \: t_d) = \begin{bmatrix}
        x(t)        \\
        y(t)        \\
        z(t)        \\
        \phi(t)     \\
        \theta(t)   \\
        \psi(t)
    \end{bmatrix} = \mathbf{x_e}(t_i) + \begin{bmatrix}
        t \, \frac{x_f - x_i}{t_d}                      \\
        4 t \frac{y_{d}}{(t_d)} (1 - \frac{t}{t_d})     \\
        t \, \frac{z_f - z_i}{t_d}                      \\
        0t                                              \\
        t \, \frac{\theta_f - \theta_i}{t_d}            \\
        0t
    \end{bmatrix}
\end{equation}

\subsubsection*{Implementation}

\begin{equation}\label{eq:3DQS_TRJ}
    \begin{aligned}
        \lambda &= 2                        \\
        \dot{x} &= 0.2                      \\
        A &= 0.25                           \\
        f &= \dot{x} \lambda^{-1}           \\
        \omega &= 2 \pi f                   \\
        \mathbf{Q}(t) &= \begin{bmatrix}
            \dot{x}t & 0 & A \cdot sin(\omega t) 
        \end{bmatrix}^{\top}
    \end{aligned}
\end{equation}

\begin{figure}[!h]
    \begin{center}
        \includegraphics[width=.8\linewidth]{_content/30_quasiStatic/3D/figQS_init.png}
        \caption{ CAPTION }
        \label{fig:3DQS_init}
    \end{center}
\end{figure}

\begin{figure}[!h]
    \begin{center}
        \includegraphics[width=.8\linewidth]{_content/30_quasiStatic/3D/figQS_traj.png}
        \caption{ CAPTION }
        \label{fig:3DQS_traj}
    \end{center}
\end{figure}

\begin{figure}[!h]
    \begin{center}
        \includegraphics[width=.8\linewidth]{_content/30_quasiStatic/3D/figQS_action.png}
        \caption{ CAPTION }
        \label{fig:3DQS_action}
    \end{center}
\end{figure}