The two dimensional model was used to initially investigate quasistatic locomotion,
as the model was less complex than its three dimensional counterparts. The experience 
gained in solving the inverse kinematic problem for two dimensional step trajectories, 
transitioning between the kinematic chains and shifting the CoM between steps, was
found to be invaluable when moving to three dimensions.

\subsubsection*{Footstep Trajectory Generation}
The a foot step trajectory was generated using ODEs?, similar to projectile motion.
Given an inital position, $\mathbf{r_i}$, final position, $\mathbf{r_f}$, desired step height, $y_{d}$, 
and time span, $t_i \to t_f$, the trajectory, $\mathbf{r}(t)$, was generated by solving two second order 
differential equations. The $y$ component of both the inital and final positions is zero, as the 
robot is stepping along the plane $y = 0$.
In $x$ no acceleration was desired, while in $y$ there was some unknown acceleration, $a_y$, which 
was necessary to return the foot to the ground within the desired time period.

\begin{equation}\label{eq:2D_accel}
    \mathbf{\ddot r}(t) = \begin{bmatrix}
            0   \\
        -a_{y}
    \end{bmatrix}
\end{equation}

The indefinite integral of equation \ref{eq:2D_accel} is $\mathbf{\dot r}(t) + \mathbf{b}$, 
where $\mathbf{b}$ is some unknown constant. At time $\frac{1}{2}(t_i + t_f)$, halfway along
the trajectory, the $y$ component of $\mathbf{\dot r}(t)$ must be zero, ceasing the foot's vertical 
velocity. Concurrently, the $x$ component of $\mathbf{\dot r}(t)$ was $0 + b_{x}$ and thus $b_{x}$
was set to the average velocity.

\begin{equation}\label{eq:2D_vel}
    \mathbf{\dot r}(t) = \begin{bmatrix}
        v_{x}(t) \\
        v_{y}(t)
    \end{bmatrix} = \begin{bmatrix}
        \frac{x_f - x_i}{t_f - t_i} \\
       -a_{y} \, t + b_{y}
    \end{bmatrix}
\end{equation}

Equation \ref{eq:2D_vel} was indefinitely integrated to yield $\mathbf{r}(t) + \mathbf{c}$, where 
$\mathbf{c}$ is some unknown constant.
The $y$ component of the trajectory contains three unknown variables, $a_{y}$, $b_{y}$ and $c_{y}$.
The robot is stepping along the plane $y = 0$ and thus, it is known that $c_{y} = 0$. To solve this coefficients
the $y$ component of the trajectory was to the desired step height halfway along the trajectory.

\begin{equation}\label{eq:2D_solve}
    y_{d} = -\frac{1}{2} a_{y} (\frac{1}{2}(t_i + t_f))^{2} + b_{y} \, (\frac{1}{2}(t_i + t_f))
\end{equation}

Substituting $b_{y} = a_{y}(\frac{1}{2}(t_i + t_f))$ into equation \ref{eq:2D_solve}
yields coefficients $a_{y}$ and $b_{y}$. As the $x$ component of the trajectory must equal 
the $x$ component of the inital position at time $t_i$, $c_{x} = x_i$. 
This lead to equation \ref{eq:2D_pos} which paramterises the trajectory of stepping foot as
a function of time.

\begin{equation}\label{eq:2D_pos}
    \mathbf{r}(t) = \begin{bmatrix}
        x(t)    \\
        y(t)    
    \end{bmatrix} = \mathbf{r_i} + \begin{bmatrix}
        t \, \frac{x_f - x_i}{t_f - t_i}     \\
        4 t \frac{y_{d}}{(t_i + t_f)} (1 - \frac{t}{t_i + t_f}) 
    \end{bmatrix}
\end{equation}

\subsubsection*{Inverse Kinematic Model}

The two dimensional inverse kinematic Model (IKM) is a quadratic optimisation function solving for the 
array of joint variables, $\mathbf{q}$, that minimise the equation \ref{eq:2D_ikm}. Weights, 
$\mathbf{K_q}$, $\mathbf{K_e}$, and $\mathbf{K_{CoM}}$, penalise the change in joint variables,
end effector error and the displacement of the ground projected CoM from the centre of the support polygon..

\begin{equation}\label{eq:2D_ikm}
    \mathbf{q^{*}} = \underset{\mathbf{q}}{\mathrm{arg\:min}}\:\:
    \mathbf{K_{e}}            \lVert  {    k(\mathbf{q}) - \mathbf{x_{e}^*}                         } \rVert \: + \\
    \mathbf{K_{CoM}}          \lVert  {    \mathbf{r^{B}_{SP}} - \mathbf{r^{B}_{CoM}}(\mathbf{q})   } \rVert \: + \\
    \mathbf{K_{q}}            \lVert  {    \mathbf{q_{0}} - \mathbf{q}                              } \rVert \:
\end{equation}

The FKM, $k(\mathbf{q})$, is the core element of the Inverse Kinematic Model.
The FKM produces the pose of the end effector, as a function of $\mathbf{q}$, with 
respect to some base coordinate system. The IKM is a function of the end effector's pose, 
$\mathbf{x_{e}}$, and returns the array of $\mathbf{q}$ necessary to achieve it. Thus, 
when given a desired pose, $\mathbf{x_{e}^*}$, the IKM returns the optimal $\mathbf{q^{*}}$ in order
to achieve it. \\

The position of the ground projected CoM with respect to the base coordinate system, $\mathbf{r^{B}_{CoM}}$, 
is subtracted from the position of the centre of the the support polygon, $\mathbf{r^{B}_{SP}}$. 
Given sufficient time, the displacement between these two points will become zero. \\ 

$\mathbf{q_{0}}$ is the previous array of optimal joint variables. Without penalising the change in 
joint angles, the new optimal joint variables, $\mathbf{q^{*}}$, could have resulted large changes 
joint angles. When considered in the context of time and position, this would have resulted in the 
acceleration of elements that form the kinematic chain, thus violating the `quasistatic assumption'.
Similarly, to prevent the CoM from accelerating beyond minimal velocities the IKM is subject to the nonlinear inequality
constraint, found in \ref{eq:2D_ineq}, where $\Delta_{t}$ is the time step. This prevents the CoM from
traveling more than 10cm per second in any linear direction, thus remaining slow enough to ignore inertial effects.

\begin{equation}\label{eq:2D_ineq}
    \frac{\lvert\: \mathbf{r^{B}_{CoM}} (\mathbf{q}) - \mathbf{r^{B}_{CoM}}(\mathbf{q0}) \:\rvert }{\Delta_{t}}  - \mathbf{0.1}_{3 \times 1} \leq \mathbf{0}_{3 \times 1}
\end{equation}

\subsubsection*{Implementation}

The two dimensional model was initialised with $ \mathbf{q_{0}} = 
[\frac{-\pi}{8}, \frac{2\pi}{8}, \frac{-\pi}{8}, \frac{\pi}{8}, \frac{-2\pi}{8}, \frac{\pi}{8}]^\top$. This
resulted in the model standing with slightly bent knees. For simplicity, the rotations associated with
the end effector pose were set to zero. The model was then run at $40Hz$ for 24 seconds,
with the steps at 0, 8 and 16 seconds. To shift between kinematic chains, a parameter called $STEP$ was 
established. $STEP$ took values of $-1$ or $1$ depending on which foot was traveling forward. This 
approach was based on the relationship between the dual kinematic chains, as seen in equation \ref{eq:STEP}.

\begin{equation}\label{eq:STEP}
    (\mathbf{T}^{Left}_{Right})^{1} = (\mathbf{T}^{Right}_{Left})^{-1}
\end{equation}

\input{_content/30_quasiStatic/AlgRun.txt}

As the matrix inverse is computationally expensive, $\emph{if}$ statements were used to switch between 
the kinematic chains. The position of the left sole, and position of the right sole, were tracked with
global two dimensional arrays, as seen in algorithm \ref{alg:2D_run}. \\

The trajectory followed by each step was designed using 
equation \ref{eq:2D_pos}. Rather than a dedicated, parallel kinematic chain and IKM to shift the CoM between steps, 
the step duration was halved during step trajectory generation algorithm. 
The inital half of the step time period was used to shift the CoM to the fixed foot, while the remainder
stepped the foot. This was achieved by populating the first half of the trajectory matrix, $\mathbf{Q}$, with the 
initial position of the end effector, $\mathbf{r}_i = \mathbf{x_e}$. Thus, the trajectory 
passed as the desired end effector position, $\mathbf{x_e^*}$, keeps the stepping foot in 
its initial position for half the time period of the step, while the CoM shifts to the opposite foot.

\input{_content/30_quasiStatic/AlgTrajgen.txt}

The IKM is a direct implementation of equation \ref{eq:2D_ikm} and nonlinear constraint \ref{eq:2D_ineq}, 
with weights found in equations \ref{eq:2D_w2} to \ref{eq:2D_w3}. The large penalty associated with the end effector error, $\mathbf{K_e}$,
forces the solver to primarily satisfy the pose of the end effector.
The initial value passed to the numerical solver at each time index,
was the previous set of optimal joint values, $\mathbf{q}_{(i-1)}$. At each time index, the corresponding
index of the step trajectory was passed as the position component of the pose, $\mathbf{r_{E}^B}^{*}_{i}$.
Concurrently, the the rotational components, $phi_x$ and $theta_y$, were set to zero.

\begin{align}
    \mathbf{K_e}            &= 1  \times 10^{4} \cdot \mathbf{I}_{4x4} \label{eq:2D_w1} \\ 
    \mathbf{K_q}            &= 1                \cdot \mathbf{I}_{6x6} \label{eq:2D_w2} \\ 
    \mathbf{K_{CoM}}        &= 1  \times 10^{3} \cdot \mathbf{I}_{1x1} \label{eq:2D_w3}
\end{align}

The position of the centre of the support line, $\mathbf{r^{B}_{SP}}$, was updated as 
a function of the $STEP$ variable. It was set to the position of the sole right foot, 
$\mathbf{r^B_r}$, when $STEP = 1$, and the position of the sole of the left foot, $\mathbf{r^B_l}$,
when $STEP = -1$. This positions are the bases of the kinematic chains from right to left, and from 
left to right, respectively. \\
As the returned $\mathbf{q^*}_{i}$ may not result in the exact desire pose, $\mathbf{x_{e}^*}_{i}$, the 
the optimal joint variables were passed through the FKM to determine the true pose of the end effector.

\subsubsection*{2D results}
On the right of figure \ref{fig:2D_CoM} the position of the feet is shown with respect to time, left in red,
right in blue. 
\begin{figure}[!h]
    \begin{center}
        \includegraphics[width=.95\linewidth]{_content/30_quasiStatic/2D/fig_CoM.png}
        \caption{2D model CoM and foot positions}
        \label{fig:2D_CoM}
    \end{center}
\end{figure}

\begin{figure}[!h]
    \begin{center}
        \includegraphics[width=.95\linewidth]{_content/30_quasiStatic/2D/fig_path.png}
        \caption{2D paths for feet}
        \label{fig:2D_traj}
    \end{center}
\end{figure}