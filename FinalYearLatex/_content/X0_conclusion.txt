This project successfully demonstrates the implementation of a quasistatic walking method
and a dynamically stable walking method in a Webots simulation environment. Due to modelling 
error, hardware changes that have been made to the Nugus platform since this project's 
inception, and the use of actuators that cannot support the mass of the robot during 
the single support phase, it is not possible to further validate these walking methods on the real system.
Specifically given the under performance of the servo motors, it is not currently possibly to implement
a quasistatic walk on the Nugus platform. Additionally, due to communication lag, the only possible
way to validate a dynamically stable gait is by generating and executing large files containing 
time iterated joint variables. Alternatively, implementing the dynamically stable approach within 
the Nubots codebase, would achieve the same result.

A novel algorithm to convert an arbitrary trajectory into a time delineated sequence of footsteps is developed.
This algorithm is modified to robustly generate footsteps along complex trajectories, using the homogenous
transform between the fixed and stepping foot following the completion of a step. A subsequent modification,
generating the footstep positions from a current time instance to a time horizon, is made to enable 
the use of preview control.

Quasistatic locomotion along a trajectory is achieved using an inverse kinematic model based on numerical
optimisation. The quadratic cost function, subject to numerical optimisation, had weights associated with the 
position of the end effector, the waist orientation of the robot, and the position of the 
centre of mass. Additionally, the numerical optimisation routine is subject
to nonlinear equality constraints to enforced the robot's posture, as well as 
nonlinear inequality constraints that restricted the average velocity of the centre of mass.

Dynamically stable locomotion along a trajectory is achieved in similar manner to quasistatic locomotion,
however, rather than forcing the centre of mass to a position within a support polygon, the centre of
mass is guided by the position state of a linear inverted pendulum. This pendulum is constrained
to move in the $XZ$ plane, at a specified height. The linear inverted pendulum model is
subject to preview control, with the output demand specified by the sequence of footsteps
generated by aforementioned algorithms.

MATLAB implementations of both methods confirmed the viability of both approaches to locomotion and 
generated time delineated sequences of joint variables. These joint variables are then executed in 
the Webots simulation environment, having been sent in sequence over TCP.

Hardware changes, hardware limitations and network delay prevented the Nugus platform 
from further validating the aforementioned methods of locomotion. However, a simulated statically stable 
pose is generated with a modified model, and sending the corresponding joint variables over TCP to 
replicate this statically stable pose on the Nugus platform, is successfully. Thus this method
of simulating a walk in MATLAB and subsequently testing the viability of the walk on 
both the Nugus platform and in Webots without writing further code, 
has great potential and plenty of room for improvement.